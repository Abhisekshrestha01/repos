@model BOL.ViewModel.CastVoteViewModel

@{
    ViewBag.Title = "CastVote";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
    <h1 class="h2">Cast Vote</h1>
    <br />
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group mr-2">
            <button class="btn btn-sm btn-outline-secondary">Share</button>
            <button class="btn btn-sm btn-outline-secondary">Export</button>
        </div>
        <button class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <span data-feather="calendar"></span>
            This week
        </button>
    </div>
</div>

@using (Html.BeginForm("CastVotePost","Election",FormMethod.Post)) 
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @{
        if (TempData["Msg"] != null)
        {
            <h4>@TempData["Msg"].ToString()</h4>
        }
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.electionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.electionId, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
            @Html.ValidationMessageFor(model => model.electionId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ElectionName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ElectionName, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
            @Html.ValidationMessageFor(model => model.ElectionName, "", new { @class = "text-danger" })
        </div>
    </div>

   

    <div class="form-group">
        @Html.LabelFor(model => model.ElectionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.TextAreaFor(model => model.ElectionDescription, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })*@
            @Html.TextAreaFor(model => model.ElectionDescription, new { @class = "form-control", @disabled = "true" })
            @Html.ValidationMessageFor(model => model.ElectionDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Select the candidate</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.candidateId, Model.listOfCandidates.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.candidateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Vote" class="btn btn-outline-secondary" />
        </div>
    </div>
</div>
}

<div>
   
</div>
